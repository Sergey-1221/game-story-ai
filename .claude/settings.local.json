{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(pip index versions:*)",
      "Bash(pip install:*)",
      "Bash(copy .env.example .env)",
      "Bash(cp:*)",
      "Bash(python:*)",
      "Bash(if [ -f \".env\" ])",
      "Bash(then echo \".env file exists\")",
      "Bash(else echo \".env file is missing\")",
      "Bash(fi)",
      "Bash(dir:*)",
      "Bash(cmd /c:*)",
      "Bash(venv\\\\Scripts\\\\python.exe -m pip list:*)",
      "Bash(\"venv\\\\Scripts\\\\python.exe\":*)",
      "Bash(venv\\Scripts\\streamlit.exe run streamlit_app.py)",
      "Bash(\"venv\\Scripts\\python.exe\" -m streamlit run streamlit_app.py --server.port 8501 --server.address localhost)",
      "Bash(\"venv\\Scripts\\python.exe\" -m uvicorn src.api.main:app --reload --port 8000)",
      "Bash(\"venv\\Scripts\\python.exe\" -m pip install python-multipart)",
      "Bash(taskkill:*)",
      "Bash(\"venv\\Scripts\\python.exe\" test_generation.py)",
      "Bash(\"venv\\Scripts\\python.exe\" test_init.py)",
      "Bash(\"venv\\Scripts\\python.exe\" run_all_safe.py)",
      "Bash(\"venv\\\\Scripts\\\\python.exe\":*)",
      "Bash(pip show:*)",
      "Bash(\"venv\\Scripts\\streamlit.exe\" run:*)",
      "Bash(\"venv\\Scripts\\python.exe\" test_quest_generation.py)",
      "Bash(if exist .env.example type .env.example)",
      "Bash(\"venv\\Scripts\\python.exe\" examples/story2game_scenecraft_demo.py)",
      "Bash(\"venv\\Scripts\\python.exe\" -m streamlit run streamlit_app.py --server.headless true --logger.level debug)",
      "Bash(\"venv\\Scripts\\python.exe\" -m pip list)",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"import streamlit; print(f''Streamlit version: {streamlit.__version__}'')\")",
      "Bash(\"venv\\Scripts\\python.exe\" test_streamlit_minimal.py)",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"import sys; sys.path.append(''.''); from src.quest_generator import QuestGenerator; print(''QuestGenerator imported successfully'')\")",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"import sys; sys.path.append(''.''); from src.modules.integrated_quest_generator import IntegratedQuestGenerator; print(''IntegratedQuestGenerator imported successfully'')\")",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"import sys; sys.path.append(''.''); from src.quest_generator import QuestGenerator; print(''QuestGenerator imported successfully'')\")",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''.'')\nfrom src.modules.scene_generator import SceneGenerator\nfrom src.modules.simple_knowledge_base import SimpleKnowledgeBase\nfrom src.core.models import GenerationConfig\nimport os\n\n# Проверяем условие для модели\nmodel = os.getenv(''DEFAULT_MODEL'', ''gpt-4o-mini'')\nsupports_json = ''mini'' not in model.lower() and (''gpt-4'' in model or ''gpt-4-turbo'' in model)\nprint(f''Модель: {model}'')\nprint(f''Поддержка json_object: {supports_json}'')\n\")",
      "Bash(\"venv\\Scripts\\python.exe\":*)",
      "Bash(del test_scene_generation.py)",
      "Bash(rm:*)",
      "Bash(ls:*)",
      "Bash(if not exist saved_quests mkdir saved_quests)",
      "Bash(del test_utf8_fix.py)",
      "Bash(del test_save_system.py)"
    ],
    "deny": []
  }
}